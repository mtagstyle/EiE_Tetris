###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       22/Mar/2018  01:24:52
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_common\tetris\Tetromino.c
#    Command line =  
#        "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_common\tetris\Tetromino.c" -D
#        MPGL2 -D MPG2 --preprocess=cl "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\Debug\List"
#        -lC "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\Debug\List"
#        -o "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\Debug\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "E:\Software\IAR
#        Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\" -I
#        "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\..\bsp\"
#        -I "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\..\drivers\"
#        -I "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\..\application\"
#        -I "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\..\libraries\captouch\"
#        -I "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\..\..\firmware_common\"
#        -I "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\..\..\firmware_common\application\"
#        -I "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\..\..\firmware_common\cmsis\"
#        -I "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\..\..\firmware_common\drivers\"
#        -I "C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\..\..\firmware_common\tetris\"
#        -On --use_c++_inline --require_prototypes -I "E:\Software\IAR
#        Systems\Embedded Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_Canada.1252
#    List file    =  
#        C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\Debug\List\Tetromino.lst
#    Object file  =  
#        C:\Users\Anthony\Google
#        Drive\Hobbies\IAR\Razor_Atmel\firmware_dotmatrix\iar_7_20_1\Debug\Obj\Tetromino.o
#
###############################################################################

C:\Users\Anthony\Google Drive\Hobbies\IAR\Razor_Atmel\firmware_common\tetris\Tetromino.c
      1          #include <stdlib.h>
      2          #include <stdio.h>
      3          #include <string.h>
      4          #include "Tetromino.h"

  #define DEBUG_MODE 0
          ^
"C:\Users\Anthony\Google Drive\Hobbies\IAR\Razor_Atmel\firmware_common\tetris\Defs.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "DEBUG_MODE" (declared at line 27)
      5          #include "Configuration.h"
      6          
      7          extern volatile u32 G_u32SystemTime1ms;     
      8          

   \                                 In section .rodata, align 4
      9          const uint8_t TShape[TETROMINO_ROWS][TETROMINO_COLS] = 
   \                     TShape:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
     10                                                              {   {0, 0, 0, 0, 0}, 
     11                                                                  {0, 0, 1, 0, 0}, 
     12                                                                  {0, 1, 1, 1, 0}, 
     13                                                                  {0, 0, 0, 0, 0}, 
     14                                                                  {0, 0, 0, 0, 0}  
     15                                                              };                      

   \                                 In section .rodata, align 4
     16          const uint8_t LeftLShape[TETROMINO_ROWS][TETROMINO_COLS] = 
   \                     LeftLShape:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
     17                                                              {   {0, 0, 0, 0, 0}, 
     18                                                                  {0, 1, 1, 1, 0}, 
     19                                                                  {0, 1, 0, 0, 0}, 
     20                                                                  {0, 0, 0, 0, 0}, 
     21                                                                  {0, 0, 0, 0, 0}  
     22                                                              };

   \                                 In section .rodata, align 4
     23          const uint8_t RightLShape[TETROMINO_ROWS][TETROMINO_COLS] = 
   \                     RightLShape:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
     24                                                              {   {0, 0, 0, 0, 0}, 
     25                                                                  {0, 1, 1, 1, 0}, 
     26                                                                  {0, 0, 0, 1, 0}, 
     27                                                                  {0, 0, 0, 0, 0}, 
     28                                                                  {0, 0, 0, 0, 0}  
     29                                                              };

   \                                 In section .rodata, align 4
     30          const uint8_t LeftSShape[TETROMINO_ROWS][TETROMINO_COLS] = 
   \                     LeftSShape:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
     31                                                              {   {0, 0, 0, 0, 0}, 
     32                                                                  {0, 1, 1, 0, 0}, 
     33                                                                  {0, 0, 1, 1, 0}, 
     34                                                                  {0, 0, 0, 0, 0}, 
     35                                                                  {0, 0, 0, 0, 0}  
     36                                                              };

   \                                 In section .rodata, align 4
     37          const uint8_t RightSShape[TETROMINO_ROWS][TETROMINO_COLS] = 
   \                     RightSShape:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x00    
   \              0x00 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
     38                                                              {   {0, 0, 0, 0, 0}, 
     39                                                                  {0, 0, 1, 1, 0}, 
     40                                                                  {0, 1, 1, 0, 0}, 
     41                                                                  {0, 0, 0, 0, 0}, 
     42                                                                  {0, 0, 0, 0, 0}  
     43                                                              };

   \                                 In section .rodata, align 4
     44          const uint8_t SquareShape[TETROMINO_ROWS][TETROMINO_COLS] = 
   \                     SquareShape:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
     45                                                              {   {0, 0, 0, 0, 0}, 
     46                                                                  {0, 0, 1, 1, 0}, 
     47                                                                  {0, 0, 1, 1, 0}, 
     48                                                                  {0, 0, 0, 0, 0}, 
     49                                                                  {0, 0, 0, 0, 0}  
     50                                                              };

   \                                 In section .rodata, align 4
     51          const uint8_t LineShape[TETROMINO_ROWS][TETROMINO_COLS] = 
   \                     LineShape:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
     52                                                              {   {0, 0, 0, 0, 0}, 
     53                                                                  {0, 0, 0, 0, 0}, 
     54                                                                  {0, 1, 1, 1, 1}, 
     55                                                                  {0, 0, 0, 0, 0}, 
     56                                                                  {0, 0, 0, 0, 0}  
     57                                                              };
     58          

   \                                 In section .text, align 2, keep-with-next
     59          void rotate_left(Tetromino* tetromino)
     60          {
   \                     rotate_left: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
   \   00000004   0x0004             MOVS     R4,R0
     61              if(tetromino != NULL)
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD028             BEQ.N    ??rotate_left_0
     62              {
     63                  Tetromino temp = *tetromino;
   \   0000000A   0x4668             MOV      R0,SP
   \   0000000C   0x0021             MOVS     R1,R4
   \   0000000E   0x221E             MOVS     R2,#+30
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy
     64                  uint8_t x = 0, y = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x2100             MOVS     R1,#+0
     65                  for( y=0;  y < TETROMINO_ROWS; y++ )
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x0011             MOVS     R1,R2
   \                     ??rotate_left_1: (+1)
   \   0000001C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001E   0x2905             CMP      R1,#+5
   \   00000020   0xDA1C             BGE.N    ??rotate_left_0
     66                  {
     67                      for( x=0; x < TETROMINO_COLS; x++ )
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0x0010             MOVS     R0,R2
   \                     ??rotate_left_2: (+1)
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x2805             CMP      R0,#+5
   \   0000002A   0xDA15             BGE.N    ??rotate_left_3
     68                      {
     69                          tetromino->_tetromino[y][x] = temp._tetromino[x][(y*-1)+4];
   \   0000002C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002E   0x2205             MOVS     R2,#+5
   \   00000030   0xFB02 0xF201      MUL      R2,R2,R1
   \   00000034   0x4422             ADD      R2,R4,R2
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x466B             MOV      R3,SP
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x2505             MOVS     R5,#+5
   \   0000003E   0xFB05 0xF500      MUL      R5,R5,R0
   \   00000042   0x442B             ADD      R3,R3,R5
   \   00000044   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   0xF05F 0x35FF      MOVS     R5,#-1
   \   0000004A   0xFB05 0xF501      MUL      R5,R5,R1
   \   0000004E   0x442B             ADD      R3,R3,R5
   \   00000050   0x791B             LDRB     R3,[R3, #+4]
   \   00000052   0x5413             STRB     R3,[R2, R0]
     70                      }
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \   00000056   0xE7E6             B.N      ??rotate_left_2
     71                  }
   \                     ??rotate_left_3: (+1)
   \   00000058   0x1C49             ADDS     R1,R1,#+1
   \   0000005A   0xE7DF             B.N      ??rotate_left_1
     72              }
     73          }
   \                     ??rotate_left_0: (+1)
   \   0000005C   0xB009             ADD      SP,SP,#+36
   \   0000005E   0xBD30             POP      {R4,R5,PC}       ;; return
     74          

   \                                 In section .text, align 2, keep-with-next
     75          void rotate_right(Tetromino* tetromino)
     76          {
   \                     rotate_right: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
   \   00000004   0x0004             MOVS     R4,R0
     77              if(tetromino != NULL)
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD025             BEQ.N    ??rotate_right_0
     78              {
     79                  Tetromino temp = *tetromino;
   \   0000000A   0x4668             MOV      R0,SP
   \   0000000C   0x0021             MOVS     R1,R4
   \   0000000E   0x221E             MOVS     R2,#+30
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy
     80                  uint8_t x = 0, y = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x2100             MOVS     R1,#+0
     81                  for( y=0;  y < TETROMINO_ROWS; y++ )
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x0011             MOVS     R1,R2
   \                     ??rotate_right_1: (+1)
   \   0000001C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001E   0x2905             CMP      R1,#+5
   \   00000020   0xDA19             BGE.N    ??rotate_right_0
     82                  {
     83                      for( x=0; x < TETROMINO_COLS; x++ )
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0x0010             MOVS     R0,R2
   \                     ??rotate_right_2: (+1)
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x2805             CMP      R0,#+5
   \   0000002A   0xDA12             BGE.N    ??rotate_right_3
     84                      {
     85                          tetromino->_tetromino[y][x] = temp._tetromino[(x*-1)+4][y];
   \   0000002C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002E   0x2205             MOVS     R2,#+5
   \   00000030   0xFB02 0xF201      MUL      R2,R2,R1
   \   00000034   0x4422             ADD      R2,R4,R2
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x466B             MOV      R3,SP
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0xF07F 0x0504      MVNS     R5,#+4
   \   00000040   0xFB05 0xF500      MUL      R5,R5,R0
   \   00000044   0x442B             ADD      R3,R3,R5
   \   00000046   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000048   0x440B             ADD      R3,R3,R1
   \   0000004A   0x7D1B             LDRB     R3,[R3, #+20]
   \   0000004C   0x5413             STRB     R3,[R2, R0]
     86                      }
   \   0000004E   0x1C40             ADDS     R0,R0,#+1
   \   00000050   0xE7E9             B.N      ??rotate_right_2
     87                  }
   \                     ??rotate_right_3: (+1)
   \   00000052   0x1C49             ADDS     R1,R1,#+1
   \   00000054   0xE7E2             B.N      ??rotate_right_1
     88              }
     89          }
   \                     ??rotate_right_0: (+1)
   \   00000056   0xB009             ADD      SP,SP,#+36
   \   00000058   0xBD30             POP      {R4,R5,PC}       ;; return
     90          

   \                                 In section .text, align 2, keep-with-next
     91          void print_tetromino(Tetromino* tetromino)
     92          {
   \                     print_tetromino: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     93              if(tetromino != NULL)
   \   00000004   0x2C00             CMP      R4,#+0
   \   00000006   0xD01C             BEQ.N    ??print_tetromino_0
     94              {
     95                  uint8_t x = 0, y = 0;
   \   00000008   0x2500             MOVS     R5,#+0
   \   0000000A   0x2600             MOVS     R6,#+0
     96                  for(y = 0; y< TETROMINO_ROWS; y++)
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x0006             MOVS     R6,R0
   \                     ??print_tetromino_1: (+1)
   \   00000010   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000012   0x2E05             CMP      R6,#+5
   \   00000014   0xDA15             BGE.N    ??print_tetromino_0
     97                  {
     98                      for( x = 0; x< TETROMINO_COLS; x++ )
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x0005             MOVS     R5,R0
   \                     ??print_tetromino_2: (+1)
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D05             CMP      R5,#+5
   \   0000001E   0xDA0B             BGE.N    ??print_tetromino_3
     99                      {
    100                          printf("%d ", tetromino->_tetromino[y][x]);
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2005             MOVS     R0,#+5
   \   00000024   0xFB00 0xF006      MUL      R0,R0,R6
   \   00000028   0x4420             ADD      R0,R4,R0
   \   0000002A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002C   0x5D41             LDRB     R1,[R0, R5]
   \   0000002E   0x....             ADR.N    R0,??DataTable2  ;; "%d "
   \   00000030   0x.... 0x....      BL       printf
    101                      }
   \   00000034   0x1C6D             ADDS     R5,R5,#+1
   \   00000036   0xE7F0             B.N      ??print_tetromino_2
    102          
    103                      printf("\n");
   \                     ??print_tetromino_3: (+1)
   \   00000038   0x....             ADR.N    R0,??DataTable2_1  ;; "\n"
   \   0000003A   0x.... 0x....      BL       printf
    104                  }
   \   0000003E   0x1C76             ADDS     R6,R6,#+1
   \   00000040   0xE7E6             B.N      ??print_tetromino_1
    105              }
    106          }
   \                     ??print_tetromino_0: (+1)
   \   00000042   0xBD70             POP      {R4-R6,PC}       ;; return
    107          

   \                                 In section .text, align 2, keep-with-next
    108          Tetromino* create_tetromino(shapeTypes shape)
    109          {                 
   \                     create_tetromino: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
    110              Tetromino* tetromino = malloc(sizeof(Tetromino));                               
   \   00000004   0x201E             MOVS     R0,#+30
   \   00000006   0x.... 0x....      BL       malloc
   \   0000000A   0x0005             MOVS     R5,R0
    111              switch(shape)
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x2C00             CMP      R4,#+0
   \   00000010   0xD009             BEQ.N    ??create_tetromino_0
   \   00000012   0x2C02             CMP      R4,#+2
   \   00000014   0xD017             BEQ.N    ??create_tetromino_1
   \   00000016   0xD30E             BCC.N    ??create_tetromino_2
   \   00000018   0x2C04             CMP      R4,#+4
   \   0000001A   0xD024             BEQ.N    ??create_tetromino_3
   \   0000001C   0xD31B             BCC.N    ??create_tetromino_4
   \   0000001E   0x2C06             CMP      R4,#+6
   \   00000020   0xD031             BEQ.N    ??create_tetromino_5
   \   00000022   0xD328             BCC.N    ??create_tetromino_6
   \   00000024   0xE037             B.N      ??create_tetromino_7
    112              {
    113                  case SHAPE_T:
    114                      memcpy(&(tetromino->_tetromino), &TShape, sizeof(uint8_t)*TETROMINO_ROWS*TETROMINO_COLS);
   \                     ??create_tetromino_0: (+1)
   \   00000026   0x2619             MOVS     R6,#+25
   \   00000028   0x....             LDR.N    R7,??DataTable2_2
   \   0000002A   0x0032             MOVS     R2,R6
   \   0000002C   0x0039             MOVS     R1,R7
   \   0000002E   0x0028             MOVS     R0,R5
   \   00000030   0x.... 0x....      BL       __aeabi_memcpy
    115                  break;
   \   00000034   0xE034             B.N      ??create_tetromino_8
    116                  
    117                  case SHAPE_LEFTL:
    118                      memcpy(&(tetromino->_tetromino), &LeftLShape, sizeof(uint8_t)*TETROMINO_ROWS*TETROMINO_COLS);
   \                     ??create_tetromino_2: (+1)
   \   00000036   0x2619             MOVS     R6,#+25
   \   00000038   0x....             LDR.N    R7,??DataTable2_3
   \   0000003A   0x0032             MOVS     R2,R6
   \   0000003C   0x0039             MOVS     R1,R7
   \   0000003E   0x0028             MOVS     R0,R5
   \   00000040   0x.... 0x....      BL       __aeabi_memcpy
    119                  break;
   \   00000044   0xE02C             B.N      ??create_tetromino_8
    120                  
    121                  case SHAPE_RIGHTL:
    122                      memcpy(&(tetromino->_tetromino), &RightLShape, sizeof(uint8_t)*TETROMINO_ROWS*TETROMINO_COLS);
   \                     ??create_tetromino_1: (+1)
   \   00000046   0x2619             MOVS     R6,#+25
   \   00000048   0x....             LDR.N    R7,??DataTable2_4
   \   0000004A   0x0032             MOVS     R2,R6
   \   0000004C   0x0039             MOVS     R1,R7
   \   0000004E   0x0028             MOVS     R0,R5
   \   00000050   0x.... 0x....      BL       __aeabi_memcpy
    123                  break;
   \   00000054   0xE024             B.N      ??create_tetromino_8
    124                  
    125                  case SHAPE_LEFTS:
    126                      memcpy(&(tetromino->_tetromino), &LeftSShape, sizeof(uint8_t)*TETROMINO_ROWS*TETROMINO_COLS);
   \                     ??create_tetromino_4: (+1)
   \   00000056   0x2619             MOVS     R6,#+25
   \   00000058   0x....             LDR.N    R7,??DataTable2_5
   \   0000005A   0x0032             MOVS     R2,R6
   \   0000005C   0x0039             MOVS     R1,R7
   \   0000005E   0x0028             MOVS     R0,R5
   \   00000060   0x.... 0x....      BL       __aeabi_memcpy
    127                  break;
   \   00000064   0xE01C             B.N      ??create_tetromino_8
    128                  
    129                  case SHAPE_RIGHTS:
    130                      memcpy(&(tetromino->_tetromino), &RightSShape, sizeof(uint8_t)*TETROMINO_ROWS*TETROMINO_COLS);
   \                     ??create_tetromino_3: (+1)
   \   00000066   0x2619             MOVS     R6,#+25
   \   00000068   0x....             LDR.N    R7,??DataTable2_6
   \   0000006A   0x0032             MOVS     R2,R6
   \   0000006C   0x0039             MOVS     R1,R7
   \   0000006E   0x0028             MOVS     R0,R5
   \   00000070   0x.... 0x....      BL       __aeabi_memcpy
    131                  break; 
   \   00000074   0xE014             B.N      ??create_tetromino_8
    132                  
    133                  case SHAPE_SQUARE:
    134                      memcpy(&(tetromino->_tetromino), &SquareShape, sizeof(uint8_t)*TETROMINO_ROWS*TETROMINO_COLS);
   \                     ??create_tetromino_6: (+1)
   \   00000076   0x2619             MOVS     R6,#+25
   \   00000078   0x....             LDR.N    R7,??DataTable2_7
   \   0000007A   0x0032             MOVS     R2,R6
   \   0000007C   0x0039             MOVS     R1,R7
   \   0000007E   0x0028             MOVS     R0,R5
   \   00000080   0x.... 0x....      BL       __aeabi_memcpy
    135                  break; 
   \   00000084   0xE00C             B.N      ??create_tetromino_8
    136                  
    137                  case SHAPE_LINE:
    138                      memcpy(&(tetromino->_tetromino), &LineShape, sizeof(uint8_t)*TETROMINO_ROWS*TETROMINO_COLS);
   \                     ??create_tetromino_5: (+1)
   \   00000086   0x2619             MOVS     R6,#+25
   \   00000088   0x....             LDR.N    R7,??DataTable2_8
   \   0000008A   0x0032             MOVS     R2,R6
   \   0000008C   0x0039             MOVS     R1,R7
   \   0000008E   0x0028             MOVS     R0,R5
   \   00000090   0x.... 0x....      BL       __aeabi_memcpy
    139                  break;
   \   00000094   0xE004             B.N      ??create_tetromino_8
    140          
    141                  default:
    142                      free(tetromino);
   \                     ??create_tetromino_7: (+1)
   \   00000096   0x0028             MOVS     R0,R5
   \   00000098   0x.... 0x....      BL       free
    143                      return NULL;
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0xE004             B.N      ??create_tetromino_9
    144              }
    145              
    146              tetromino->blockCords.x = 0;
   \                     ??create_tetromino_8: (+1)
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x8368             STRH     R0,[R5, #+26]
    147              tetromino->blockCords.y = 0;
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x83A8             STRH     R0,[R5, #+28]
    148          
    149              return tetromino;
   \   000000A8   0x0028             MOVS     R0,R5
   \                     ??create_tetromino_9: (+1)
   \   000000AA   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    150          }
    151          

   \                                 In section .text, align 2, keep-with-next
    152          void destroy_tetromino(Tetromino* tetromino)
    153          {
   \                     destroy_tetromino: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    154              if(tetromino != NULL)
   \   00000004   0x2C00             CMP      R4,#+0
   \   00000006   0xD002             BEQ.N    ??destroy_tetromino_0
    155                  free(tetromino);
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       free
    156          }
   \                     ??destroy_tetromino_0: (+1)
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
    157              

   \                                 In section .text, align 2, keep-with-next
    158          Tetromino* change_tetromino (Tetromino* tetromino)
    159          {
   \                     change_tetromino: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    160              if(tetromino != NULL)
   \   00000004   0x2C00             CMP      R4,#+0
   \   00000006   0xD002             BEQ.N    ??change_tetromino_0
    161              {
    162                  destroy_tetromino(tetromino);
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       destroy_tetromino
    163              }
    164              
    165              srand((uint32_t)G_u32SystemTime1ms);
   \                     ??change_tetromino_0: (+1)
   \   0000000E   0x....             LDR.N    R0,??DataTable2_9
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x.... 0x....      BL       srand
    166              uint32_t rng = rand() % MAX_SHAPES;
   \   00000016   0x.... 0x....      BL       rand
   \   0000001A   0x2107             MOVS     R1,#+7
   \   0000001C   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000020   0xFB01 0x0512      MLS      R5,R1,R2,R0
    167              return create_tetromino(rng);
                                             ^
Warning[Pe188]: enumerated type mixed with another type
   \   00000024   0x0028             MOVS     R0,R5
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x.... 0x....      BL       create_tetromino
   \   0000002C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    168          }
    169          

   \                                 In section .text, align 2, keep-with-next
    170          void set_tetromino (Tetromino* tetromino, uint8_t x, uint8_t y, uint8_t val)
    171          {
   \                     set_tetromino: (+1)
   \   00000000   0xB410             PUSH     {R4}
    172              if(tetromino != NULL)
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD006             BEQ.N    ??set_tetromino_0
    173              {
    174                  tetromino->_tetromino[y][x] = val;
   \   00000006   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000008   0x2405             MOVS     R4,#+5
   \   0000000A   0xFB04 0xF402      MUL      R4,R4,R2
   \   0000000E   0x4404             ADD      R4,R0,R4
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x5463             STRB     R3,[R4, R1]
    175              }
    176          }
   \                     ??set_tetromino_0: (+1)
   \   00000014   0xBC10             POP      {R4}
   \   00000016   0x4770             BX       LR               ;; return
    177          

   \                                 In section .text, align 2, keep-with-next
    178          void fill_tetromino(Tetromino* tetromino, uint8_t val)
    179          {
   \                     fill_tetromino: (+1)
   \   00000000   0xB410             PUSH     {R4}
    180              if(tetromino != NULL)
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD012             BEQ.N    ??fill_tetromino_0
    181              {
    182                  for(uint8_t y = 0; y < TETROMINO_ROWS; y++)
   \   00000006   0x2200             MOVS     R2,#+0
   \                     ??fill_tetromino_1: (+1)
   \   00000008   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000000A   0x2A05             CMP      R2,#+5
   \   0000000C   0xDA0E             BGE.N    ??fill_tetromino_0
    183                  {
    184                      for(uint8_t x = 0; x < TETROMINO_COLS; x++)
   \   0000000E   0x2300             MOVS     R3,#+0
   \                     ??fill_tetromino_2: (+1)
   \   00000010   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000012   0x2B05             CMP      R3,#+5
   \   00000014   0xDA08             BGE.N    ??fill_tetromino_3
    185                      {
    186                          tetromino->_tetromino[y][x] = val;
   \   00000016   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000018   0x2405             MOVS     R4,#+5
   \   0000001A   0xFB04 0xF402      MUL      R4,R4,R2
   \   0000001E   0x4404             ADD      R4,R0,R4
   \   00000020   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000022   0x54E1             STRB     R1,[R4, R3]
    187                      }
   \   00000024   0x1C5B             ADDS     R3,R3,#+1
   \   00000026   0xE7F3             B.N      ??fill_tetromino_2
    188                  }
   \                     ??fill_tetromino_3: (+1)
   \   00000028   0x1C52             ADDS     R2,R2,#+1
   \   0000002A   0xE7ED             B.N      ??fill_tetromino_1
    189              }
    190          }
   \                     ??fill_tetromino_0: (+1)
   \   0000002C   0xBC10             POP      {R4}
   \   0000002E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x25 0x64          DC8      "%d "
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x0A 0x00          DC8      "\n",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     TShape

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     LeftLShape

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     RightLShape

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     LeftSShape

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     RightSShape

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     SquareShape

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     LineShape

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     G_u32SystemTime1ms

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x64          DC8 "%d "
   \              0x20 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x0A 0x00          DC8 "\012"

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   change_tetromino
        16   -> create_tetromino
        16   -> destroy_tetromino
        16   -> rand
        16   -> srand
      24   create_tetromino
        24   -> __aeabi_memcpy
        24   -> free
        24   -> malloc
       8   destroy_tetromino
         8   -> free
       4   fill_tetromino
      16   print_tetromino
        16   -> printf
      48   rotate_left
        48   -> __aeabi_memcpy
      48   rotate_right
        48   -> __aeabi_memcpy
       4   set_tetromino


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ?_0
       2  ?_1
      28  LeftLShape
      28  LeftSShape
      28  LineShape
      28  RightLShape
      28  RightSShape
      28  SquareShape
      28  TShape
      46  change_tetromino
     172  create_tetromino
      16  destroy_tetromino
      48  fill_tetromino
      68  print_tetromino
      96  rotate_left
      90  rotate_right
      24  set_tetromino

 
 202 bytes in section .rodata
 600 bytes in section .text
 
 600 bytes of CODE  memory
 202 bytes of CONST memory

Errors: none
Warnings: 2
